#!/usr/bin/env bash

set -e

current_date="$(date -I)"
# Source path used to create a snapshot of.
snap_src_path="$1"
# Destination path that the newly created snapshot will be stored.
snap_dest_path="$2"
# Destination path that the newly created snapshot will be sent to.
snap_export_path="$3"
# Number of snapshot to keep.
# TODO: Make configurable and use dates.
snaps_to_keep=7

# Create a new snapshot of the specified snap_src_path.
create_snap() {
	btrfs subvolume snapshot -r "${snap_src_path}" "${snap_dest_path}/${current_date}"
	sync
}

# Export the difference between the newly created snapshot and the previous one
# to an external disk.
export_snap_diff() {
	local snaps=(${snap_dest_path}/*)
	local prev_snap_dest="${snaps[-2]}"
	
	btrfs send -p "${prev_snap_dest}" "${snap_dest_path}/${current_date}" | btrfs receive "${snap_export_path}"
}

# Delete the excess snapshots.
clean_snaps() {
	local snaps=(${snap_dest_path}/*)
	local exported_snaps=(${snap_export_path}/*)
	local num_snaps=${#snaps[@]}
	local num_exported_snaps=${#exported_snaps[@]}

	if [[ ${num_snaps} != ${num_exported_snaps} ]]; then
		return 1
	fi

	if [[ ${num_snaps} -gt ${snaps_to_keep} ]]; then
		local snaps_to_delete=$((${num_snaps} - ${snaps_to_keep}))

		btrfs subvolume delete "${snaps[@]::${snaps_to_delete}}"
	fi

	if [[ ${num_exported_snaps} -gt ${snaps_to_keep} ]]; then
		local snaps_to_delete=$((${num_exported_snaps} - ${snaps_to_keep}))

		btrfs subvolume delete "${exported_snaps[@]::${snaps_to_delete}}"
	fi
}

create_snap
export_snap_diff
clean_snaps

exit 0
